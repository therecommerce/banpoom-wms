<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="consignment" >
	<select id="selectConsignmentProductCount" resultType="ProductCountVO">
		<!-- 위탁, 입고/검수 관리 대쉬보드 숫자 -->
		SELECT
			IFNULL(SUM(case when t101.state = '픽업요청' then 1 else 0 end),0) as pickupCount ,
			IFNULL(SUM(case when t101.state = '반품구조대로 이동 중' then 1 else 0 end),0) as moveCount ,
			IFNULL(SUM(case when t101.state = '도착/입고' then 1 else 0 end),0) as arrivalCount ,
			IFNULL(SUM(case when t101.state = '검수중' then 1 else 0 end),0) as inpsectionCount ,
			IFNULL(SUM(case when t101.state = '최종 검수 대기' then 1 else 0 end),0) as readyCount ,
			IFNULL(SUM(case when t101.state = '검수완료' then 1 else 0 end),0) as completeCount
		FROM
		(
			SELECT
				thp2.product_id, thp2.reg_dt, thp2.state , tpl.account_id
			FROM TBL_HISTORY_PRODUCT thp2
				LEFT JOIN TBL_PRODUCT_LIST tpl ON thp2.product_id = tpl.product_id
			WHERE (thp2.product_id, thp2.history_id)
			IN
			(
				SELECT product_id , max(history_id) FROM TBL_HISTORY_PRODUCT thp
				GROUP BY product_id
			)
			AND (tpl.sell_type = '위탁판매' OR tpl.sell_type = '재고위탁' OR tpl.sell_type = '반품위탁')
			AND tpl.is_keeping = FALSE
		) AS t101
	</select>

	<select id="selectConsignmentList" resultType="ConsignmentVO" parameterType="HashMap">
-- 		selectConsignmentList
		SELECT *
		FROM (
		SELECT
		t1.product_id as product_id
		,t1.sell_type as sell_type
		,tbi.company_name as seller_name
		,CONCAT(tpc2.category_name,<![CDATA['>']]>,tpc.category_name) as category_name
		,t1.product_name as product_name
		,t1.product_count as product_count
		, (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id DESC LIMIT 1) as product_state
		,trr.tracking_number as tracking_no
		,tpi.product_grade as product_grade
		,ta1.account_name as inspector_name
		,DATE_FORMAT(t1.product_selling_dt,'%Y-%m-%d %H:%i') as product_selling_dt

		from TBL_PRODUCT_LIST t1
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc ON tpc.category_id = t1.category_id
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc2 ON tpc.parent_category_id = tpc2.category_id
		LEFT JOIN TBL_ACCOUNT ta ON t1.account_id = ta.account_id
		LEFT JOIN TBL_REQUEST_RETURN trr ON t1.product_id = trr.product_id
		LEFT JOIN TBL_PRODUCT_INSPECTION tpi ON t1.product_id = tpi.product_id
		LEFT JOIN TBL_ACCOUNT ta1 ON tpi.account_id = ta1.account_id
		LEFT JOIN TBL_BUSINESS_INFO tbi ON t1.account_id = tbi.account_id
		WHERE 1 = 1
		AND t1.is_keeping = false
		AND (
		SELECT thp.state FROM TBL_HISTORY_PRODUCT thp WHERE thp.product_id = t1.product_id ORDER BY thp.history_id DESC LIMIT 1
		) NOT IN ('기부', '폐기', '회수', '품절', '판매중지', '판매중', '배송정보 입력대기', '정산예정', '배송완료', '배송지 입력 대기', '배송중', '결제완료')
		<if test="category_id != null and category_id !=''">
			and tpc.category_id = #{category_id}
		</if>
		<if test="parent_category_id != null and parent_category_id !=''">
			and tpc2.category_id = #{parent_category_id}
		</if>
		) as t101
		WHERE t101.product_state is not null
		<if test="product_id != null and product_id !=''">
			and t101.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="sell_type == '반품위탁' or sell_type =='재고위탁'">
			and t101.sell_type like CONCAT('%',#{sell_type},'%')
		</if>
		<if test="product_name != null and product_name !=''">
			and t101.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="seller_name != null and seller_name !=''">
			and t101.seller_name like CONCAT('%',#{seller_name},'%')
		</if>
		<if test="tracking_no != null and tracking_no !=''">
			and t101.tracking_no like CONCAT('%',#{tracking_no},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		<if test="product_state != null and product_state !=''">
			and t101.product_state IN
			<foreach collection="product_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.product_selling_dt desc
		LIMIT ${recordCountPerPage} OFFSET ${firstIndex}
	</select>

	<select id="selectConsignmentListTotal" resultType="Integer" parameterType="HashMap">
-- 		selectConsignmentListTotal
		SELECT count(*)
		FROM (
		SELECT
		t1.product_id as product_id
		,t1.sell_type as sell_type
		,CONCAT(tbi.company_name, '(', ta.account_name, ')') as seller_name
		,CONCAT(tpc2.category_name,<![CDATA['>']]>,tpc.category_name) as category_name
		,t1.product_name as product_name
		,t1.product_count as product_count
		, (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id and thp.state not in ('품절','판매중지') order by thp.history_id
		DESC LIMIT 1) as product_state
		,trr.tracking_number as tracking_no
		,tpi.product_grade as product_grade
		,ta1.account_name as inspector_name
		,DATE_FORMAT(t1.product_selling_dt,'%y-%m-%d %H:%i') as product_selling_dt

		from TBL_PRODUCT_LIST t1
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc ON tpc.category_id = t1.category_id
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc2 ON tpc.parent_category_id = tpc2.category_id
		LEFT JOIN TBL_ACCOUNT ta ON t1.account_id = ta.account_id
		LEFT JOIN TBL_REQUEST_RETURN trr ON t1.product_id = trr.product_id
		LEFT JOIN TBL_PRODUCT_INSPECTION tpi ON t1.product_id = tpi.product_id
		LEFT JOIN TBL_ACCOUNT ta1 ON tpi.account_id = ta1.account_id
		LEFT JOIN TBL_BUSINESS_INFO tbi ON t1.account_id = tbi.account_id
		WHERE 1 = 1
		AND t1.is_keeping = false
		AND (
		SELECT thp.state FROM TBL_HISTORY_PRODUCT thp WHERE thp.product_id = t1.product_id ORDER BY thp.history_id DESC LIMIT 1
		) NOT IN ('기부', '폐기', '회수', '품절', '판매중지', '판매중', '배송정보 입력대기', '정산예정', '배송완료', '배송지 입력 대기', '배송중', '결제완료')
		<if test="category_id != null and category_id !=''">
			and tpc.category_id = #{category_id}
		</if>
		<if test="parent_category_id != null and parent_category_id !=''">
			and tpc2.category_id = #{parent_category_id}
		</if>
		) as t101
		WHERE t101.product_state is not null
		<if test="product_id != null and product_id !=''">
			and t101.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="sell_type == '반품위탁' or sell_type =='재고위탁'">
			and t101.sell_type like CONCAT('%',#{sell_type},'%')
		</if>
		<if test="product_name != null and product_name !=''">
			and t101.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="seller_name != null and seller_name !=''">
			and t101.seller_name like CONCAT('%',#{seller_name},'%')
		</if>
		<if test="tracking_no != null and tracking_no !=''">
			and t101.tracking_no like CONCAT('%',#{tracking_no},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		<if test="product_state != null and product_state !=''">
			and t101.product_state IN
			<foreach collection="product_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		t101.product_selling_dt desc
	</select>

	<select id="selectConsignmentProductSellingCount" resultType="ProductCountVO">
		<!-- 위탁, 상품/판매 관리 대쉬보드 카운트 -->
		SELECT
			IFNULL(SUM(case when t101.state = '판매중' then 1 else 0 end),0) as sellingCount ,
			IFNULL(SUM(case when t101.state = '판매중지' then 1 else 0 end),0) as stopCount ,
			IFNULL(SUM(case when t101.state = '품절' then 1 else 0 end),0) as soldOutCount
		FROM
		(
			SELECT
			thp2.product_id, thp2.reg_dt, thp2.state , tpl.account_id
			FROM TBL_HISTORY_PRODUCT thp2
			LEFT JOIN TBL_PRODUCT_LIST tpl ON thp2.product_id = tpl.product_id
			WHERE (thp2.product_id, thp2.history_id)
			IN
			(
				SELECT product_id , max(history_id) FROM TBL_HISTORY_PRODUCT thp
				WHERE thp.state IN ('판매중','판매중지','품절')
				GROUP BY  product_id
			)
			AND (tpl.sell_type = '위탁판매' OR tpl.sell_type = '재고위탁' OR tpl.sell_type = '반품위탁')
			AND tpl.is_keeping = false
			AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = tpl.product_id order by thp.history_id
			DESC LIMIT 1) != '기부'
			AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = tpl.product_id order by thp.history_id
			DESC LIMIT 1) != '폐기'
			AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = tpl.product_id order by thp.history_id
			DESC LIMIT 1) != '회수'
		) as t101
	</select>

	<select id="selectConsignmentSellingList" resultType="ConsignmentVO" parameterType="HashMap">
-- 		selectConsignmentSellingList
		SELECT * FROM
		(SELECT
		t1.product_id as product_id
		,t1.sell_type as sell_type
		,CONCAT(tbi.company_name, '(', ta.account_name, ')') as seller_name
		,CONCAT(tpc2.category_name,<![CDATA['>']]>,tpc.category_name) as category_name
		,t1.product_name as product_name
		,t1.product_count as product_count
		,t1.product_vprice as product_vprice
		, (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id and thp.state in ('판매중','품절','판매중지') order by thp.history_id
		DESC LIMIT 1) as product_state
		,trr.tracking_number as tracking_no
		,tpi.product_grade as product_grade
		,ta1.account_name as inspector_name
		, date_format((select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id AND thp.state = '판매중' order by thp.history_id
		ASC LIMIT 1), '%Y-%m-%d') as product_selling_dt
		, ABS(DATEDIFF(NOW(), (select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id AND thp.state = '판매중' order by thp.history_id
		ASC LIMIT 1))) as diffDate
		from TBL_PRODUCT_LIST t1
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc ON tpc.category_id = t1.category_id
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc2 ON tpc.parent_category_id = tpc2.category_id
		LEFT JOIN TBL_ACCOUNT ta ON t1.account_id = ta.account_id
		LEFT JOIN TBL_REQUEST_RETURN trr ON t1.product_id = trr.product_id
		LEFT JOIN TBL_PRODUCT_INSPECTION tpi ON t1.product_id = tpi.product_id
		LEFT JOIN TBL_ACCOUNT ta1 ON tpi.account_id = ta1.account_id
		LEFT JOIN TBL_BUSINESS_INFO tbi ON t1.account_id = tbi.account_id
		WHERE (t1.sell_type = '위탁판매' or t1.sell_type = '반품위탁' or t1.sell_type = '재고위탁')
		AND t1.is_keeping = false
		AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id
		DESC LIMIT 1) != '기부'
		AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id
		DESC LIMIT 1) != '폐기'
		AND (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id
		DESC LIMIT 1) != '회수'
		<if test="category_id != null and category_id !=''">
			and tpc.category_id = #{category_id}
		</if>
		<if test="parent_category_id != null and parent_category_id !=''">
			and tpc2.category_id = #{parent_category_id}
		</if>
		) as t101
		WHERE t101.product_state is not null
		<if test="product_id != null and product_id !=''">
			and t101.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="product_name != null and product_name !=''">
			and t101.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="seller_name != null and seller_name !=''">
			and t101.seller_name like CONCAT('%',#{seller_name},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		<if test="product_state != null and product_state !=''">
			and t101.product_state IN
			<foreach collection="product_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.product_selling_dt desc
		LIMIT ${recordCountPerPage} OFFSET ${firstIndex}
	</select>

	<select id="selectConsignmentSellingListTotal" resultType="Integer" parameterType="HashMap">
-- 		selectConsignmentSellingListTotal
		SELECT COUNT(*) FROM
		(SELECT
		t1.product_id as product_id
		,t1.sell_type as sell_type
		,CONCAT(ta.account_name,'(',AES_DECRYPT(UNHEX(ta.account_id),#{aes_key}),')') as seller_name
		,CONCAT(tpc2.category_name,<![CDATA['>']]>,tpc.category_name) as category_name
		,t1.product_name as product_name
		,t1.product_count as product_count
		, (select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id and thp.state in ('판매중','품절','판매중지') order by thp.history_id
		DESC LIMIT 1) as product_state
		,trr.tracking_number as tracking_no
		,tpi.product_grade as product_grade
		,ta1.account_name as inspector_name
		,DATE_FORMAT(t1.product_selling_dt,'%y.%m.%d') as product_selling_dt

		from TBL_PRODUCT_LIST t1
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc ON tpc.category_id = t1.category_id
		LEFT JOIN TBL_PRODUCT_CATEGORY tpc2 ON tpc.parent_category_id = tpc2.category_id
		LEFT JOIN TBL_ACCOUNT ta ON t1.account_id = ta.account_id
		LEFT JOIN TBL_REQUEST_RETURN trr ON t1.product_id = trr.product_id
		LEFT JOIN TBL_PRODUCT_INSPECTION tpi ON t1.product_id = tpi.product_id
		LEFT JOIN TBL_ACCOUNT ta1 ON tpi.account_id = ta1.account_id
		WHERE (t1.sell_type = '위탁판매' or t1.sell_type = '반품위탁' or t1.sell_type = '재고위탁')
		AND t1.is_keeping = false
		<if test="category_id != null and category_id !=''">
			and tpc.category_id = #{category_id}
		</if>
		<if test="parent_category_id != null and parent_category_id !=''">
			and tpc2.category_id = #{parent_category_id}
		</if>
		) as t101
		WHERE t101.product_state is not null
		<if test="product_id != null and product_id !=''">
			and t101.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="product_name != null and product_name !=''">
			and t101.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="seller_name != null and seller_name !=''">
			and t101.seller_name like CONCAT('%',#{seller_name},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(t101.product_selling_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		<if test="product_state != null and product_state !=''">
			and t101.product_state IN
			<foreach collection="product_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="selectConsignmentDetail" resultType="ConsignmentVO">
-- 		selectConsignmentDetail
		SELECT
			t1.product_id				as product_id
			 , ta.account_name 			as seller_name
			 , tbi.store_name			as store_name
			 , tbi.company_name 		as company_name
			 , tbi.company_phone 		as company_phone
			 , t1.product_price			as product_price
			 , t1.product_vprice		as product_vprice
			 , t1.product_name			as product_name
			 , t1.product_count			as product_count
			 , AES_DECRYPT(UNHEX(t1.account_id),#{aes_key})	as account_id
			 , date_format((select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id AND thp.state = '판매중' order by thp.history_id
		    	ASC LIMIT 1), '%Y-%m-%d') as product_selling_dt
			 , ABS(DATEDIFF(NOW(), (select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id AND thp.state = '판매중' order by thp.history_id
			    ASC LIMIT 1))) as diffDate
		     , date_format((select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id DESC LIMIT 1), '%Y-%m-%d') as storage_dt
			 , ABS(DATEDIFF(NOW(), (select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id DESC LIMIT 1))) as diffDate_storage_dt
		     <if test="isSelling == true">
			 ,(select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id and thp.state in ('판매중','품절','판매중지') order by thp.history_id
				DESC LIMIT 1) 				as product_state
			 ,true							as isSelling
			 </if>
			<if test="isSelling == false">
			 ,(select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id and thp.state not in ('판매중','품절','판매중지','기부','폐기','회수') order by thp.history_id
			  DESC LIMIT 1) 			as product_state
			 ,false						as isSelling
			</if>
			<if test="isSelling == null">
				,(select thp.state from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id
				DESC LIMIT 1) 			as product_state
			</if>
			 , t1.seller_url			as seller_url
             , CONCAT(t3.category_name,'>',t2.category_name) as category_name
             , t2.category_id			as category_id
             , t3.category_id			as parent_category_id
             , t5.tracking_number     	as tracking_no
             , t5.purchaser_name		as purchaser_name
             , t5.return_reason			as return_reason
             , t5.purchaser_phone		as purchaser_phone
             , t5.return_request_message
             , t5.pickup_zipcode
             , t5.pickup_address1
             , t5.pickup_address2
             , t6.delivery_option
             , if(t6.parent_option_id is null, t6.product_option1, null) as option_name
             , tpi.product_grade
             , tpi.inspection_opinion
             , t8.account_name			as inspector_name
	  		 , t9.forwarding_destination_zip
			 , t9.forwarding_destination_addr1
			 , t9.forwarding_destination_addr2
			 , t1.delivery_company AS delivery_company1
			 , t5.delivery_company AS delivery_company2
			 , t9.delivery_type
			 , t9.delivery_charge
			 , t9.return_location_zip
			 , t9.return_location_addr1
			 , t9.return_location_addr2
			 , t9.return_charge
			 , t9.purchaser_name as delivery_purchaser_name
			 , t9.purchaser_phone as delivery_purchaser_phone
			 , t1.sell_type
			 , t1.delivery_number
			 , t5.is_direct_delivery
			 , if(t10.optionName1 is not null, t10.optionName1, null) as optionName1
			 , if(t10.optionName2 is not null, t10.optionName2, null) as optionName2
			 , if(t10.optionName3 is not null, t10.optionName3, null) as optionName3
			 , if(t10.optionName4 is not null, t10.optionName4, null) as optionName4
			 , if(t10.optionName5 is not null, t10.optionName5, null) as optionName5
			 , if(t10.option_id is not null, (select count(*) from TBL_OPTION_LIST where product_id = #{product_id}), 0) as option_count
			 , IF(NULLIF(t10.optionName5, '') IS NOT NULL, 5, IF(NULLIF(t10.optionName4, '') IS NOT NULL, 4, IF(NULLIF(t10.optionName3, '') IS NOT NULL, 3,
		       IF(NULLIF(t10.optionName2, '') IS NOT NULL, 2, IF(NULLIF(t10.optionName1, '') IS NOT NULL, 1, 0))))) AS optionCount
		     , date_format(date_add((select thp.reg_dt from TBL_HISTORY_PRODUCT thp where thp.product_id = t1.product_id order by thp.history_id desc LIMIT 1), interval 3 hour), '%Y-%m-%d %H:%i') as selling_start_dt
		FROM TBL_PRODUCT_LIST t1
		left join TBL_ACCOUNT ta ON t1.account_id = ta.account_id
		left join TBL_PRODUCT_CATEGORY t2 on t1.category_id = t2.category_id
		left join TBL_PRODUCT_CATEGORY t3 on t2.parent_category_id = t3.category_id
		left join TBL_BUSINESS_INFO tbi ON tbi.account_id = t1.account_id
		left join TBL_REQUEST_RETURN t5 on t1.product_id = t5.product_id
		left join TBL_PRODUCT_OPTION t6 on t1.product_id = t6.product_id
		left join TBL_PRODUCT_INSPECTION tpi ON t1.product_id = tpi.product_id
		left join TBL_ACCOUNT t8 on tpi.account_id = t8.account_id
		left join TBL_DELIVERY_INFO t9 on t1.product_id = t9.product_id
		left join TBL_OPTION_LIST t10 on t1.product_id = t10.product_id
		WHERE t1.product_id = #{product_id}
			LIMIT 1
	</select>

	<select id="selectOptionList" resultType="ConsignmentVO">
-- 		selectOptionList
		select
			optionName1
			 , optionName2
			 , optionName3
			 , optionName4
			 , optionName5
			 , option1
			 , option2
			 , option3
			 , option4
			 , option5
			 , optionPrice
			 , optionCount
		from TBL_OPTION_LIST
		where product_id = #{product_id}
		order by option_id asc
	</select>

	<update id="updateProductInfo" parameterType="ConsignmentVO">
		-- 		updateProductInfo
		UPDATE TBL_PRODUCT_LIST
		set
			product_name   =    #{product_name}
		    ,product_vprice =    #{product_vprice}
			,product_count  =    #{product_count}
		    ,category_id =       #{category_id}
		WHERE product_id   =    #{product_id}
	</update>

	<update id="updateProductInspection" parameterType="ConsignmentVO">
		-- 		updateProductInspection
		UPDATE TBL_PRODUCT_INSPECTION
		SET
			product_grade   =    #{product_grade}
		  , inspection_opinion =    #{inspection_opinion}
		WHERE product_id   =    #{product_id}
	</update>

	<select id="selectConsignDeliveryCount" resultType="DirectProductManagementVO">
		-- 		selectConsignDeliveryCount
		SELECT
			IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '배송요청' then 1 else 0 end),0) as deliveryRequestCount
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '배송준비중' then 1 else 0 end),0) as deliveryPrepareCount
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '배송중' then 1 else 0 end),0) as onDeliveryCount
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '배송완료' then 1 else 0 end),0) as deliveryCompleteCount
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '취소' then 1 else 0 end),0) as deliveryCancelCount
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '결제완료' then 1 else 0 end),0) as pay_complete
			 , IFNULL(sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) = '정산예정' then 1 else 0 end),0) as pay_not_yet
		FROM TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_CALCULATE_INFO t4 on t2.product_id = t4.product_id
		WHERE 1 = 1
		AND (t3.sell_type = '반품위탁' OR t3.sell_type = '재고위탁')
		AND t3.is_keeping = false
		AND (select thd.delivery_type  from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1)  = '주문'
	</select>

	<select id="selectConsignmentReturnCount" resultType="DirectProductManagementVO">
		-- 		selectConsignmentReturnCount
		SELECT
			sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) = '반품요청' then 1 else 0 end) as returnRequestCount
			 , sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) = '반품거절' then 1 else 0 end) as holdReturnCount
			 , sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) = '반품 반송중' then 1 else 0 end) as returnDeliveryCount
			 , sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) = '반품 반송 완료' then 1 else 0 end) as returnCompleteCount
			 , sum(case when (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) = '반품 환불 완료' then 1 else 0 end) as returnRefundCompletCount
		FROM TBL_DELIVERY_RETURN t1
		left join TBL_REQUEST_RETURN t2 on t1.return_request_id = t2.return_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		WHERE 1 = 1
		AND t3.is_keeping = false
		and t3.sell_type = ('재고위탁' or '반품위탁')
	</select>

	<select id="selectOrderDeliveryProductList" parameterType="hashmap" resultType="DirectProductManagementVO">
		-- selectOrderDeliveryProductList
		SELECT *
		from (
		select
		(select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1) as order_delivery_state
		, t1.delivery_no AS delivery_no1
		, t3.sell_type
		, t1.order_send_name
		, t1.order_send_phone
		, t1.order_rcv_name
		, t1.order_rcv_addr1
		, t1.order_rcv_addr2
		, t1.delivery_no
		, DATE_FORMAT(t1.order_delivery_dt, '%Y-%m-%d') as order_delivery_dt
		, t3.product_name
		, t2.order_product_count
		, t4.product_option1
		, '' as start_dt
		, '' as end_dt
		, AES_DECRYPT(UNHEX(t3.account_id), #{aes_key}) as account_id
		, t5.account_name
		, t2.order_request_id
		, IF((select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1)= '정산예정' , (select DATE_FORMAT(thd.reg_dt, '%Y-%m-%d') from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1), NULL) as order_decide_dt
		, DATE_FORMAT(t2.order_request_dt, '%Y-%m-%d') AS order_request_dt
		, smartstore_order_no
		, smartstore_name
		, t3.product_id
		, t1.order_delivery_company
		, t2.tracking_number
		, t1.order_rcv_zip
		, t1.order_rcv_phone
		, t2.order_request_message
		, t1.tracking_number_registe_flag
		,CONCAT('[',IFNULL(tr.rack_name,'-'),'][',IFNULL(t3.product_id,'-'),'][',IFNULL(t3.product_name,'-'),'][',IFNULL(t2.order_product_count,'-'),']') as wbl_product_name
		FROM TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_PRODUCT_OPTION t4 on t3.product_id = t4.product_id
		left join TBL_ACCOUNT t5 on t3.account_id = t5.account_id
		LEFT JOIN TBL_RACK_PRODUCT trp ON trp.product_id = t3.product_id
		LEFT JOIN TBL_RACK tr ON tr.rack_id = trp.rack_id
		WHERE 1 = 1
		AND (t3.sell_type = '반품위탁' OR t3.sell_type = '재고위탁')
		AND t3.is_keeping = false
		AND (select thd.delivery_type  from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1)  = '주문'
		<if test="product_name != null and product_name !=''">
			and product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="order_send_name != null and order_send_name !=''">
			and order_send_name like CONCAT('%',#{order_send_name},'%')
		</if>
		<if test="delivery_no1 != null and delivery_no1 !=''">
			and t1.delivery_no like CONCAT('%',#{delivery_no1},'%')
		</if>
		<if test="account_name != null and account_name !=''">
			and t5.account_name like CONCAT('%',#{account_name},'%')
		</if>
		<if test="order_rcv_name != null and order_rcv_name !=''">
			and t1.order_rcv_name like CONCAT('%',#{order_rcv_name},'%')
		</if>
		<if test="product_id != null and product_id !=''">
			and t3.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="tracking_number != null and tracking_number !=''">
			and t2.tracking_number like CONCAT('%',#{tracking_number},'%')
		</if>
		<if test="sell_type != null and sell_type !=''">
			and t3.sell_type like CONCAT('%',#{sell_type},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(order_request_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and date_format(order_request_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		    ) as t101
		where 1=1
		and t101.order_delivery_state is not null
		<if test="order_delivery_state != null and order_delivery_state !=''">
			and t101.order_delivery_state IN
			<foreach collection="order_delivery_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.delivery_no desc
		LIMIT ${recordCountPerPage} OFFSET ${firstIndex}
	</select>

	<select id="selectOrderDeliveryProductListTotal" parameterType="hashmap" resultType="Integer">
		-- selectOrderDeliveryProductListTotal
		SELECT COUNT(*)
		from (
		SELECT
		(select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1) as order_delivery_state
		, t1.delivery_no AS delivery_no1
		, t3.sell_type
		, t1.order_send_name
		, t1.order_send_phone
		, t1.order_rcv_name
		, t1.order_rcv_addr1
		, t1.order_rcv_addr2
		, t1.delivery_no
		, DATE_FORMAT(t1.order_delivery_dt, '%Y-%m-%d') as order_delivery_dt
		, t3.product_name
		, t2.order_product_count
		, t4.product_option1
		, '' as start_dt
		, '' as end_dt
		, AES_DECRYPT(UNHEX(t3.account_id), #{aes_key}) as account_id
		, t5.account_name
		, t2.order_request_id
		, DATE_FORMAT(t2.order_decide_dt, '%Y-%m-%d') AS order_decide_dt
		, DATE_FORMAT(t2.order_request_dt, '%Y-%m-%d') AS order_request_dt
		, smartstore_order_no
		, smartstore_name
		, t3.product_id
		, t1.order_delivery_company
		, t2.tracking_number
		, t1.order_rcv_zip
		, t1.order_rcv_phone
		, t2.order_request_message
		, t6.cal_state
		,CONCAT('[',IFNULL(tr.rack_name,'-'),'][',IFNULL(t3.product_id,'-'),'][',IFNULL(t3.product_name,'-'),'][',IFNULL(t2.order_product_count,'-'),']') as wbl_product_name
		FROM TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_PRODUCT_OPTION t4 on t3.product_id = t4.product_id
		left join TBL_ACCOUNT t5 on t3.account_id = t5.account_id
		left join TBL_CALCULATE_INFO t6 on t2.order_request_id = t6.order_request_id
		LEFT JOIN TBL_RACK_PRODUCT trp ON trp.product_id = t3.product_id
		LEFT JOIN TBL_RACK tr ON tr.rack_id = trp.rack_id
		WHERE 1 = 1
		AND (t3.sell_type = '반품위탁' OR t3.sell_type = '재고위탁')
		AND t3.is_keeping = false
		AND (select thd.delivery_type  from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id
		desc LIMIT 1)  = '주문'
		<if test="product_name != null and product_name !=''">
			and product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="order_send_name != null and order_send_name !=''">
			and order_send_name like CONCAT('%',#{order_send_name},'%')
		</if>
		<if test="delivery_no1 != null and delivery_no1 !=''">
			and t1.delivery_no like CONCAT('%',#{delivery_no1},'%')
		</if>
		<if test="account_name != null and account_name !=''">
			and t5.account_name like CONCAT('%',#{account_name},'%')
		</if>
		<if test="order_rcv_name != null and order_rcv_name !=''">
			and t1.order_rcv_name like CONCAT('%',#{order_rcv_name},'%')
		</if>
		<if test="product_id != null and product_id !=''">
			and t3.product_id like CONCAT('%',#{product_id},'%')
		</if>
		<if test="tracking_number != null and tracking_number !=''">
			and t2.tracking_number like CONCAT('%',#{tracking_number},'%')
		</if>
		<if test="sell_type != null and sell_type !=''">
			and t3.sell_type like CONCAT('%',#{sell_type},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(order_request_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and date_format(order_request_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		) as t101
		WHERE 1=1
		and t101.order_delivery_state is not null
		<if test="order_delivery_state != null and order_delivery_state !=''">
			and t101.order_delivery_state IN
			<foreach collection="order_delivery_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.delivery_no desc
	</select>

	<select id="selectTrackingNumberFlag" parameterType="ProductListVO" resultType="DirectProductManagementVO">
		select tracking_number_registe_flag
		,	delivery_no as delivery_no1
		from TBL_DELIVERY_ORDER
		where 1=1
		and delivery_no in
		<foreach collection="delivery_no_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<update id="updateTrackingNumberFlag" parameterType="ProductListVO">
		update TBL_DELIVERY_ORDER
		set tracking_number_registe_flag = 1
		where 1=1
		and delivery_no in
		<foreach collection="delivery_no_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	<select id="selectTrackingNumber" parameterType="ProductListVO" resultType="DirectProductManagementVO">
-- 		selectTrackingNumber
		select t2.tracking_number as tracking_number

		from TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		where 1=1
		and t1.delivery_no in
		<foreach collection="delivery_no_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<select id="selectOrderDeliveryDetail" parameterType="ProductListVO" resultType="DirectProductManagementVO">
		SELECT
		t6.company_name  		as company_name -- 상호명
		, t6.store_name			as store_name	-- 스토어명
		, t5.account_name 		as seller_name  -- 담당자
		, t6.company_phone 		as company_phone -- 셀러 연락처
		, (select thd.state from TBL_HISTORY_DELIVERY thd where thd.delivery_no = t1.delivery_no order by thd.history_id desc LIMIT 1) as order_delivery_state
		, t1.delivery_no AS delivery_no1
		, t3.sell_type
		, t1.order_send_name	-- 구매
		, t1.order_send_phone	-- 구매자연락
		, t1.order_rcv_name		-- 수령인
		, t1.order_rcv_addr1	-- 주소
		, t1.order_rcv_addr2	-- 주소2
		, t1.delivery_no
		, t3.product_name		-- 상품명
		, t2.order_product_count
		, t4.product_option1
		, '' as start_dt
		, '' as end_dt
		, t5.account_name
		, t2.order_request_id
		, DATE_FORMAT(t2.order_decide_dt, '%Y-%m-%d') AS order_decide_dt
		, DATE_FORMAT(t2.order_request_dt, '%Y-%m-%d %T') AS order_request_dt	-- 주문일
		, smartstore_order_no
		, smartstore_name
		, t3.product_id
		, t1.order_delivery_company			-- 택배사명
		, t2.tracking_number				-- 운송장번호
		, t2.order_decide_dt
		, t2.order_request_message 			-- 배송 메시지
		, t1.order_rcv_zip
		, t1.order_rcv_phone
		, t2.order_price
		, DATE_FORMAT(t2.payment_dt, '%Y-%m-%d %T') as payment_dt
		, t2.payment_method
		, t2.order_product_price
		, t1.order_delivery_type
		, t1.order_delivery_cost 			as order_delivery_price
		FROM TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_PRODUCT_OPTION t4 on t3.product_id = t4.product_id
		left join TBL_ACCOUNT t5 on t3.account_id = t5.account_id
		left join TBL_BUSINESS_INFO t6 ON t6.account_id = t5.account_id
		WHERE 1 = 1
		AND t1.delivery_no = #{delivery_number}

	</select>

	<select id="selectReturnDeliveryProductList" parameterType="hashmap" resultType="DirectProductManagementVO">
		-- 		selectReturnDeliveryProductList
		select *
		from (
		SELECT
		date_format(t1.return_delivery_dt, '%Y-%m-%d') as return_delivery_dt
		, t1.return_request_id
		, t1.return_no as delivery_no
		, t2.return_reason
	    , t2.purchaser_name as order_send_name
	    , t2.purchaser_phone as order_send_phone
		, (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) as return_delivery_state
		, t1.return_way
		, t1.return_delivery_company
		, t2.tracking_number
		, t2.return_decide_dt
		, t3.product_name
		, t4.product_option1
		, t3.product_count
		, '' as start_dt
		, '' as end_dt
		, AES_DECRYPT(UNHEX(t3.account_id), #{aes_key}) as account_id
		, t5.account_name

		FROM TBL_DELIVERY_RETURN t1
		left join TBL_REQUEST_RETURN t2 on t1.return_request_id = t2.return_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_PRODUCT_OPTION t4 on t3.product_id = t4.product_id
		left join TBL_ACCOUNT t5 on t3.account_id = t5.account_id

		WHERE 1 = 1
		AND t3.sell_type = ('재고위탁' or '반품위탁')
		AND t3.is_keeping = false
		<if test="product_name != null and product_name !=''">
			and t3.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="order_send_name != null and order_send_name !=''">
			and order_send_name like CONCAT('%',#{order_send_name},'%')
		</if>
		<if test="delivery_no != null and delivery_no !=''">
			and return_no like CONCAT('%',#{return_no},'%')
		</if>
		<if test="account_name != null and account_name !=''">
			and t5.account_name like CONCAT('%',#{account_name},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(return_delivery_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(return_delivery_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		) as t101
		where 1=1
		and t101.return_delivery_state is not null
		<if test="return_delivery_state != null and return_delivery_state !=''">
			and t101.return_delivery_state IN
			<foreach collection="return_delivery_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.delivery_no desc
		LIMIT ${recordCountPerPage} OFFSET ${firstIndex}
	</select>

	<select id="selectReturnDeliveryProductListTotal" parameterType="hashmap" resultType="Integer">
		-- 		selectReturnDeliveryProductListTotal
		select count(*)
		from (
		SELECT
		date_format(t1.return_delivery_dt, '%Y-%m-%d') as return_delivery_dt
		, t1.return_request_id
		, t1.return_no as delivery_no
		, t2.return_reason
		, t2.purchaser_name as order_send_name
		, t2.purchaser_phone as order_send_phone
		, (select thd.state from TBL_HISTORY_DELIVERY thd where thd.return_request_id = t2.return_request_id order by thd.history_id desc LIMIT 1) as return_delivery_state
		, t1.return_way
		, t1.return_delivery_company
		, t2.tracking_number
		, t2.return_decide_dt
		, t3.product_name
		, t4.product_option1
		, t3.product_count
		, '' as start_dt
		, '' as end_dt
		, AES_DECRYPT(UNHEX(t3.account_id), #{aes_key}) as account_id
		, t5.account_name

		FROM TBL_DELIVERY_RETURN t1
		left join TBL_REQUEST_RETURN t2 on t1.return_request_id = t2.return_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		left join TBL_PRODUCT_OPTION t4 on t3.product_id = t4.product_id
		left join TBL_ACCOUNT t5 on t3.account_id = t5.account_id

		WHERE 1 = 1
		AND t3.sell_type = '위탁판매'
		AND t3.is_keeping = false
		<if test="product_name != null and product_name !=''">
			and t3.product_name like CONCAT('%',#{product_name},'%')
		</if>
		<if test="order_send_name != null and order_send_name !=''">
			and order_send_name like CONCAT('%',#{order_send_name},'%')
		</if>
		<if test="delivery_no != null and delivery_no !=''">
			and return_no like CONCAT('%',#{return_no},'%')
		</if>
		<if test="account_name != null and account_name !=''">
			and t5.account_name like CONCAT('%',#{account_name},'%')
		</if>
		<if test="start_dt != null and start_dt !='' and end_dt != null and end_dt !=''">
			and (date_format(return_delivery_dt, '%Y-%m-%d') <![CDATA[>=]]>#{start_dt} and
			date_format(return_delivery_dt, '%Y-%m-%d') <![CDATA[<=]]> #{end_dt})
		</if>
		) as t101
		where 1=1
		and t101.return_delivery_state is not null
		<if test="return_delivery_state != null and return_delivery_state !=''">
			and t101.return_delivery_state IN
			<foreach collection="return_delivery_state" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<if test="order_column != null and order_column != ''">
			${order_column} ${order_type} ,
		</if>
		t101.delivery_no desc
	</select>

	<update id="updateOrderDecide" parameterType="DirectProductManagementVO" useGeneratedKeys="false">
		-- 구매확정 날짜 업데이트
		UPDATE TBL_REQUEST_ORDER
		SET order_decide_dt = NOW()
		WHERE 1 = 1
		AND order_request_id =
		    (SELECT order_request_id FROM TBL_DELIVERY_ORDER WHERE delivery_no = (#{delivery_no}))
	</update>

	<update id="updateOrderDecideCancel" parameterType="DirectProductManagementVO">
		-- 구매확정취소
		UPDATE TBL_REQUEST_ORDER
		SET order_decide_dt = NULL
		WHERE 1 = 1
		AND order_request_id IN (SELECT order_request_id FROM TBL_DELIVERY_ORDER WHERE delivery_no IN
		<foreach collection="order_request_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>)
	</update>

	<insert id="insertCalculateInfo" parameterType="DirectProductManagementVO">
-- 		insertCalculateInfo
		INSERT INTO TBL_CALCULATE_INFO (
			product_id,
			consumer ,
			cal_state ,
			sell_commission ,
			cal_dt ,
			cal_vprice ,
			cal_price ,
			account_id ,
			cal_admin ,
			cal_id,
			order_request_id ,
			cal_month_no
		) VALUES (
		(SELECT
		product_id
		FROM TBL_REQUEST_ORDER
		WHERE order_request_id = #{order_request_id}),
		#{account_name},
		'정산예정',
		  <choose>
			  <when test="sell_type == '직접판매'">
				  (SELECT
				  (product_vprice * 0.1) * (SELECT
				  	order_product_count FROM TBL_REQUEST_ORDER
				  	WHERE order_request_id = #{order_request_id})
				  FROM TBL_PRODUCT_LIST
				  WHERE product_id = #{product_id}),
			  </when>
			  <when test="sell_type == '재고위탁'">
				  (SELECT
				  (product_vprice * 0.3) * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})
				  FROM TBL_PRODUCT_LIST
				  WHERE product_id = #{product_id}),
			  </when>
			  <when test="sell_type == '반품위탁'">
				  (SELECT
				  (product_vprice * 0.35) * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})
				  FROM TBL_PRODUCT_LIST
				  WHERE product_id = #{product_id}),
			  </when>
			  <when test="sell_type == '반품수거'">
				  (SELECT
				  ((T1.return_count * 3000) + (T1.store_count * 2000) + (T1.release_count * 3000) + case when T2.payment_price = NULL then 1 else 0 end ) AS R1
				  FROM TBL_PRODUCT_COMMISSION AS T1
				  LEFT JOIN TBL_OFFER_MANAGEMENT AS T2 ON T2.product_id = T1.product_id
				  WHERE 1 = 1
				  AND T1.product_id = #{product_id}
				  AND T1.order_request_id = #{order_request_id}) ,
			  </when>
		  </choose>
		  NOW(),
		  (#{product_vprice} * (SELECT
								order_product_count FROM TBL_REQUEST_ORDER
								WHERE order_request_id = #{order_request_id})),
			<choose>
				<when test="sell_type == '직접판매'">
					((#{product_vprice} * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})) - ((SELECT
					(T5.product_vprice * 10 / 100) * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id}) AS commission
					FROM TBL_PRODUCT_LIST AS T5
					WHERE product_id = #{product_id})) ),
				</when>
				<when test="sell_type == '재고위탁'">
					((#{product_vprice} * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})) - ((SELECT
					(T5.product_vprice * 30 / 100) * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id}) AS commission
					FROM TBL_PRODUCT_LIST AS T5
					WHERE product_id = #{product_id})) ),
				</when>
				<when test="sell_type == '반품위탁'">
					((#{product_vprice} * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})) - ((SELECT
					(T5.product_vprice * 35 / 100) * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id}) AS commission
					FROM TBL_PRODUCT_LIST AS T5
					WHERE product_id = #{product_id})) ),
				</when>
				<when test="sell_type == '반품수거'">
					((#{product_vprice} * (SELECT
					order_product_count FROM TBL_REQUEST_ORDER
					WHERE order_request_id = #{order_request_id})) - ((SELECT
					((T1.return_count * 3000) + (T1.store_count * 2000) + (T1.release_count * 3000) + case when T2.payment_price = NULL then 1 else 0 end ) AS R1
					FROM TBL_PRODUCT_COMMISSION AS T1
					LEFT JOIN TBL_OFFER_MANAGEMENT AS T2 ON T2.product_id = T1.product_id
					WHERE 1 = 1
					AND T1.product_id = #{product_id}
					AND T1.order_request_id = #{order_request_id}) ) ),
				</when>
			</choose>
		  #{account_id},
		  #{account_name},
		(SELECT CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '-', LPAD(nextval(cal_seq) , 5, 0))),
		  #{order_request_id} ,
		  #{cal_month_no}
		)
	</insert>

	<delete id="deleteCalculateInfo">
		DELETE FROM TBL_CALCULATE_DETAIL
		WHERE 1 = 1
		AND delivery_no IN
		    <foreach collection="order_request_list" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
	</delete>

	<select id="selectCalculateForProductId" parameterType="DirectProductManagementVO" resultType="DirectProductManagementVO">
		SELECT
			T2.product_id,
			T2.sell_type ,
			T1.order_request_dt ,
			T1.order_request_id ,
			T1.account_id ,
			T1.order_product_count ,
			T2.product_vprice ,
			T2.product_vprice ,
			T1.order_name AS account_name
		FROM TBL_REQUEST_ORDER AS T1
			LEFT JOIN TBL_PRODUCT_LIST AS T2 ON T2.product_id = T1.product_id
			LEFT JOIN TBL_ACCOUNT AS T3 ON T3.account_id = T2.account_id
			LEFT JOIN TBL_CALCULATE_INFO AS T4 ON T4.order_request_id  = T1.order_request_id
		WHERE 1 = 1
		AND T1.order_request_id IN (SELECT order_request_id FROM TBL_DELIVERY_ORDER WHERE delivery_no = (#{delivery_no}))
	</select>

	<select id="selectIsKeeping" parameterType="DirectProductManagementVO" resultType="DirectProductManagementVO">
		SELECT
			T1.order_decide_dt ,
			DATE_FORMAT(T1.order_decide_dt, '%Y%m') AS diffDate ,
			T3.is_keeping
		FROM TBL_REQUEST_ORDER AS T1
				 LEFT JOIN TBL_DELIVERY_ORDER AS T2 ON T2.order_request_id = T1.order_request_id
				 LEFT JOIn TBL_PRODUCT_LIST AS T3 ON T3.product_id = T1.product_id
		WHERE T2.delivery_no = #{delivery_no}
	</select>

	<select id="selectSameMonthCode" parameterType="DirectProductManagementVO" resultType="DirectProductManagementVO">
<!--		<choose>-->
<!--			<when test="diffDate == nowTime and is_keeping == 0">-->
<!--				SELECT-->
<!--				T1.cal_month_no ,-->
<!--				T1.cal_dt-->
<!--				FROM TBL_CALCULATE_INFO T1-->
<!--				LEFT JOIN TBL_PRODUCT_LIST AS T2 ON T2.product_id = T1.product_id-->
<!--				WHERE 1 = 1-->
<!--				AND T2.is_keeping = 0-->
<!--				ORDER BY cal_dt DESC LIMIT 1-->
<!--			</when>-->
<!--			<when test="diffDate == nowTime and is_keeping == 1">-->
<!--				SELECT-->
<!--				T1.cal_month_no ,-->
<!--				T1.cal_dt-->
<!--				FROM TBL_CALCULATE_INFO T1-->
<!--				LEFT JOIN TBL_PRODUCT_LIST AS T2 ON T2.product_id = T1.product_id-->
<!--				WHERE 1 = 1-->
<!--				AND T2.is_keeping = 1-->
<!--				ORDER BY cal_dt DESC LIMIT 1-->
<!--			</when>-->
<!--			<when test="diffDate != nowTime">-->
<!--				(SELECT CONCAT(DATE_FORMAT(NOW(), '%Y%m'), LPAD(nextval(cal_month_seq) , 4, 0)) AS cal_month_no)-->
<!--			</when>-->
<!--		</choose>-->
		(SELECT CONCAT(DATE_FORMAT(NOW(), '%Y%m'), LPAD(nextval(cal_month_seq) , 4, 0)) AS cal_month_no)
	</select>

	<select id="selectProductCount" parameterType="ProductListVO" resultType="Integer">
-- 		selectProductCount
		select
		    product_count
		from TBL_PRODUCT_LIST
		where product_id = #{product_id}
	</select>

	<update id="minusProductCount" parameterType="ProductListVO">
--          minusProductCount
		update TBL_PRODUCT_LIST
		set product_count = (select product_count from TBL_PRODUCT_LIST where product_id = #{product_id}) - #{order_product_count}
		, sell_type = #{sell_type}
		, is_keeping = 1
		where product_id = #{product_id}
	</update>

	<insert id="insertDeliveryOrderConsign" parameterType="ProductListVO">
-- 		insertDeliveryOrderConsign
		<selectKey resultType="Integer" keyProperty="order_request_id" order="AFTER">
			SELECT order_request_id
			FROM TBL_REQUEST_ORDER
			WHERE product_id = #{product_id}
			ORDER BY order_request_dt DESC LIMIT 1
		</selectKey>
		INSERT INTO TBL_REQUEST_ORDER  (
			product_id,
			account_id,
			order_request_dt ,
			order_product_count ,
			order_request_message ,
			order_name ,
			smartstore_order_no ,
		    smartstore_name,
			order_price,
			payment_dt,
		    payment_method
		) VALUES (
			#{product_id},
			HEX(AES_ENCRYPT(#{account_id}, #{aes_key})),
			#{order_request_dt},
			#{order_product_count},
			#{order_request_message},
			#{order_rcv_name},
			#{smartstore_order_no} ,
		    #{smartstore_name},
			#{product_price},
			#{payment_dt},
			#{payment_method}
		)
	</insert>

	<insert id="insertDeliveryRequestReturnDelivery" parameterType="ProductListVO">
		-- 		insertDeliveryRequestReturnDelivery
		<selectKey resultType="Integer" keyProperty="order_request_id" order="AFTER">
			SELECT order_request_id
			FROM TBL_REQUEST_ORDER
			WHERE product_id = #{product_id}
			ORDER BY order_request_dt DESC LIMIT 1
		</selectKey>
		INSERT INTO TBL_REQUEST_ORDER  (
			product_id,
			order_request_dt ,
			order_product_count ,
			order_request_message ,
			order_name ,
			smartstore_order_no ,
			order_price ,
		    payment_dt ,
			payment_method
		) VALUES (
			#{product_id},
			#{order_request_dt},
			#{order_product_count},
			#{order_request_message},
			#{order_rcv_name},
			#{smartstore_order_no},
			#{product_price},
			#{payment_dt},
			#{payment_method}
		)
	</insert>

	<select id="selectProductDeliveryInfo" parameterType="ProductListVO" resultType="Integer">
		select count(*)
		from TBL_REQUEST_ORDER
		where product_id = #{product_id}
	</select>

	<insert id="insertExcelDeliveryOrder" parameterType="ProductListVO">
		-- 		insertExcelDeliveryOrder
		<selectKey resultType="Integer" keyProperty="delivery_no" order="AFTER">
			SELECT delivery_no
			FROM TBL_DELIVERY_ORDER
			WHERE order_request_id = #{order_request_id}
			ORDER BY order_delivery_dt DESC LIMIT 1
		</selectKey>
		INSERT INTO TBL_DELIVERY_ORDER (
			order_request_id ,
			order_send_name ,
			order_send_phone ,
			order_send_zip ,
			order_send_addr1 ,
			order_send_addr2 ,
			order_rcv_name ,
			order_rcv_phone ,
			order_rcv_zip ,
			order_rcv_addr1 ,
			order_rcv_addr2 ,
			order_delivery_state
		) VALUES (
			#{order_request_id},
			#{order_send_name},
			#{order_send_phone},
			#{order_send_zip},
			#{order_send_addr1},
			#{order_send_addr2},
			#{order_rcv_name},
			#{order_rcv_phone},
			#{order_rcv_zip},
			#{order_rcv_addr1},
			#{order_rcv_addr2},
			'배송요청'
		)
	</insert>

	<insert id="insertExcelDeliveryOrderReturnDelivery" parameterType="ProductListVO">
		-- 		insertExcelDeliveryOrderReturnDelivery
		<selectKey resultType="Integer" keyProperty="delivery_no" order="AFTER">
			SELECT delivery_no
			FROM TBL_DELIVERY_ORDER
			WHERE order_request_id = #{order_request_id}
			ORDER BY order_delivery_dt DESC LIMIT 1
		</selectKey>
		INSERT INTO TBL_DELIVERY_ORDER (
			order_request_id ,
			order_send_name ,
			order_send_phone,
			order_rcv_name ,
			order_rcv_phone ,
			order_rcv_phone2 ,
			order_rcv_addr1 ,
			order_rcv_addr2 ,
			order_delivery_state
		) VALUES (
			#{order_request_id},
			#{purchaser_name},
			#{purchaser_phone},
			#{order_rcv_name},
			#{order_rcv_phone},
			#{order_rcv_phone2},
			#{order_rcv_addr1},
			#{order_rcv_addr2},
			'배송요청'
		)
	</insert>

	<update id="updatePostInfo" parameterType="DirectProductManagementVO">
-- 		updatePostInfo
		<if test = "delivery_list == null">
			UPDATE TBL_REQUEST_ORDER t1
			left join TBL_DELIVERY_ORDER t2 on t1.order_request_id = t2.order_request_id
			SET t1.tracking_number = #{tracking_number}
			WHERE t2.delivery_no = #{delivery_no}
		</if>

		<if test = "delivery_list != null">
			<foreach collection = "delivery_list" item="item" index="index" separator=";" close=";">

				UPDATE TBL_REQUEST_ORDER t1
				left join TBL_DELIVERY_ORDER t2 on t1.order_request_id = t2.order_request_id
				SET t1.tracking_number = #{item.tracking_number}
				WHERE t2.delivery_no = #{item.delivery_no}

			</foreach>
		</if>
	</update>

	<update id="updatePostTrackingNumber" parameterType="DirectProductManagementVO">
-- 		updatePostTrackingNumber
		<if test = "delivery_list == null">
			update TBL_DELIVERY_ORDER
			set order_delivery_company = #{order_delivery_company}
				, tracking_number_registe_flag = 1
			where delivery_no = #{delivery_no}
		</if>

		<if test = "delivery_list != null">
			<foreach collection = "delivery_list" item="item" index="index" separator=";" close=";">

				UPDATE TBL_DELIVERY_ORDER
				SET order_delivery_company = #{item.order_delivery_company}
					, tracking_number_registe_flag = 1
				WHERE delivery_no = #{item.delivery_no}

			</foreach>
		</if>
	</update>

	<update id="updatePostState" parameterType="DirectProductManagementVO">
		UPDATE TBL_DELIVERY_ORDER
		SET order_delivery_state = '배송중'
		WHERE
		<if test="delivery_no_list != null">
			delivery_no in
			<foreach collection="delivery_no_list" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
		<if test="delivery_no != null">
			delivery_no = #{delivery_no}
		</if>
	</update>

	<insert id="insertSellingState" parameterType="DirectProductManagementVO">
		INSERT INTO TBL_HISTORY_PRODUCT (
			reg_dt ,
			state ,
			product_id
		) VALUES (
			NOW() ,
			'판매중' ,
			#{product_id}
		)
	</insert>

	<select id="selectTrackingPrintContent" parameterType="ProductListVO" resultType="ProductListVO">
-- 		selectTrackingPrintContent
		SELECT
			trackingprint_content
		FROM voomerang.TB_TrackingPrintResult_List
		WHERE 1=1
		and tracking_number in
		<foreach collection="tracking_number_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<select id="selectDeliveryInfo" parameterType="DirectProductManagementVO" resultType="hashmap">
-- 		selectDeliveryInfo
		select
		  CONCAT(t1.order_rcv_addr1, ' ', t1.order_rcv_addr2)			as address
		  , t1.order_rcv_addr1				as address1
		  , t1.order_rcv_addr2				as address2
		  , t1.order_rcv_zip				as rcv_zip
		  , t1.order_rcv_name				as rcv_name
		  , t1.order_rcv_phone				as rcv_phone
		  , CONCAT('[',IFNULL(tr.rack_name,'-'),'][',IFNULL(t3.product_id,'-'),'][',IFNULL(t3.product_name,'-'),'][',IFNULL(t2.order_product_count,'-'),']') as product_name
		  , t2.order_product_count			as product_count
		  , t2.order_request_message		as delivery_msg
		  , t3.product_id					as product_id
		  , '00001'							as msg_key
		  , '15878'							as snd_zip
		  ,	'2012218'						as csr_num
		  ,	'THERECO'						as client_id
		  , t1.delivery_no
		from TBL_DELIVERY_ORDER t1
		left join TBL_REQUEST_ORDER t2 on t1.order_request_id = t2.order_request_id
		left join TBL_PRODUCT_LIST t3 on t2.product_id = t3.product_id
		LEFT JOIN TBL_RACK_PRODUCT trp ON trp.product_id = t3.product_id
		LEFT JOIN TBL_RACK tr ON tr.rack_id = trp.rack_id
		where 1 = 1
		and (t3.sell_type = '반품위탁' OR t3.sell_type = '재고위탁')
		and t3.is_keeping = false
		and t1.delivery_no in
		<foreach collection="delivery_no_list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<insert id="insertProductOption" parameterType="ConsignmentVO">
		--         insertProductOption
		INSERT INTO TBL_PRODUCT_OPTION (
		product_id,
		option_category1,
		option_category2,
		option_category3,
		option_category4,
		option_category5,
		option_name1,
		option_name2,
		option_name3,
		option_name4,
		option_name5
		) VALUE (
		#{product_id},
		#{option_category1},
		#{option_category2},
		#{option_category3},
		#{option_category4},
		#{option_category5},
		#{option_name1},
		#{option_name2},
		#{option_name3},
		#{option_name4},
		#{option_name5}
		)
	</insert>

	<delete id="deleteOptionList" parameterType="ConsignmentVO">
		-- 		deleteOptionList
		delete from TBL_OPTION_LIST
		where 1=1
		and product_id = #{product_id}

	</delete>

	<insert id="insertProductOptionList" parameterType="ConsignmentVO">
-- 		insertProductOptionList
		INSERT INTO TBL_OPTION_LIST (
			product_id,
			optionName1,
			optionName2,
			optionName3,
			optionName4,
			optionName5,
			option1,
			option2,
			option3,
			option4,
			option5,
			optionPrice,
			optionCount
		) VALUES (
					 #{product_id},
					 #{optionName1},
					 #{optionName2},
					 #{optionName3},
					 #{optionName4},
					 #{optionName5},
					 #{option1},
					 #{option2},
					 #{option3},
					 #{option4},
					 #{option5},
					 #{optionPrice},
					 #{optionCount}
				 )

	</insert>

	<select id="selectOptionName" parameterType="ConsignmentVO" resultType="ConsignmentVO">
-- 		selectOptionName
		select
			GROUP_CONCAT(DISTINCT option1 SEPARATOR ',') AS option1
		  , GROUP_CONCAT(DISTINCT option2 SEPARATOR ',') AS option2
		  , GROUP_CONCAT(DISTINCT option3 SEPARATOR ',') AS option3
		  , GROUP_CONCAT(DISTINCT option4 SEPARATOR ',') AS option4
		  , GROUP_CONCAT(DISTINCT option5 SEPARATOR ',') AS option5
		  , GROUP_CONCAT(DISTINCT optionPrice SEPARATOR ',') AS optionPrice
		  , GROUP_CONCAT(DISTINCT optionCount SEPARATOR ',') AS optionCount
		from TBL_OPTION_LIST
		where product_id = #{product_id}
	</select>

	<select id="selectOptionPrice" parameterType="ConsignmentVO" resultType="ConsignmentVO">
-- 		selectOptionPrice
		select
		    optionPrice
		  , optionCount
		from TBL_OPTION_LIST
		where product_id = #{product_id}
		order by option_id
	</select>

	<insert id="insertDeliveryHistory" parameterType="ProductListVO">
-- 		insertDeliveryHistory
		insert into TBL_HISTORY_DELIVERY(
		state
		, delivery_type
		, delivery_no
		<if test="return_request_id != null">
			, return_request_id
		</if>
		) values
		<if test="delivery_no == null">
			<foreach collection="delivery_no_list" item="item" index="index" separator=",">
				(
				#{product_state}
				, #{delivery_type}
				, #{item}
				<if test="return_request_id != null">
					, #{return_request_id}
				</if>
				)
			</foreach>
		</if>
		<if test="delivery_no != null">
			(
			#{product_state}
			, #{delivery_type}
			, #{delivery_no}
			<if test="return_request_id != null">
				, #{return_request_id}
			</if>
			)
		</if>
	</insert>

	<delete id="deleteDeliveryHistory" parameterType="ProductListVO">
		delete from TBL_HISTORY_DELIVERY
		where history_id IN (
		select tmp.history_id
		from (
		select thd.history_id
		from TBL_HISTORY_DELIVERY thd
		where thd.delivery_no in (
		<foreach collection="delivery_no_list" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
		AND thd.state = '정산예정'
		) as tmp
		)
	</delete>

	<update id="updateProductSellType" parameterType="ProductListVO">
		-- 		updateProductSellType
		update TBL_PRODUCT_LIST
		set
			product_count = (select product_count from TBL_PRODUCT_LIST where product_id = #{product_id}) - #{order_product_count}
		  , sell_type = #{sell_type}
		  , is_keeping = false
		where product_id = #{product_id}
	</update>

	<select id="selectDeliveryHistory" parameterType="ProductListVO" resultType="HistoryVO">
		SELECT
			delivery_no
			, state
			, DATE_FORMAT(reg_dt, '%Y-%m-%d %T') as reg_dt
		FROM TBL_HISTORY_DELIVERY
		WHERE delivery_no = #{delivery_number}
	</select>

	<select id="selectDeliveryNumber" parameterType="ProductListVO" resultType="ProductListVO">
-- 		selectDeliveryNumber
		select delivery_no

		from TBL_DELIVERY_ORDER
		where order_request_id = #{order_request_id}
	</select>
</mapper>
